CUDA available: True
loading annotations into memory...
Done (t=93.81s)
creating index...
index created!
loading annotations into memory...
Done (t=0.55s)
creating index...
index created!
FractalNet(
  (convH_0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3))
  (drop1): Dropout(p=0.3, inplace=False)
  (relu): ReLU(inplace=True)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (maxpoolH_0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (the_block1): Sequential(
    (0): BigBlock(
      (con0_0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_2): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_3): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_2): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_4): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_5): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_3): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_6): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_7): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=1, dilation=1, ceil_mode=False)
      (maxpool1): MaxPool2d(kernel_size=7, stride=7, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (the_block2): Sequential(
    (0): BigBlock(
      (con0_0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_2): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_3): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_2): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_4): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_5): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_3): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_6): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_7): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=1, dilation=1, ceil_mode=False)
      (maxpool1): MaxPool2d(kernel_size=7, stride=7, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (the_block3): Sequential(
    (0): BigBlock(
      (con0_0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_2): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_3): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_2): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_4): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_5): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_3): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_6): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_7): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=1, dilation=1, ceil_mode=False)
      (maxpool1): MaxPool2d(kernel_size=7, stride=7, padding=1, dilation=1, ceil_mode=False)
    )
  )
  (the_block4): Sequential(
    (0): BigBlock(
      (con0_0): BasicBlock(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_0): BasicBlock(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_0): BasicBlock(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_1): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_1): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_2): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_3): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_0): BasicBlock(
        (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_2): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_4): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_5): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con1_1): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con2_3): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_6): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (con3_7): BasicBlock(
        (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (drop1): Dropout(p=0.3, inplace=False)
        (relu): ReLU(inplace=True)
        (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=1, dilation=1, ceil_mode=False)
      (maxpool1): MaxPool2d(kernel_size=7, stride=7, padding=1, dilation=1, ceil_mode=False)
    )
  )
)
Num training images: 118287
torch.Size([128, 64, 3, 3])
torch.Size([128])
torch.Size([128, 64, 3, 3])
torch.Size([128])
torch.Size([128, 64, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 64, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([128, 128, 3, 3])
torch.Size([128])
torch.Size([256, 128, 3, 3])
torch.Size([256])
torch.Size([256, 128, 3, 3])
torch.Size([256])
torch.Size([256, 128, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 128, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([256, 256, 3, 3])
torch.Size([256])
torch.Size([512, 256, 3, 3])
torch.Size([512])
torch.Size([512, 256, 3, 3])
torch.Size([512])
torch.Size([512, 256, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 256, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([512, 512, 3, 3])
torch.Size([512])
torch.Size([1024, 512, 3, 3])
torch.Size([1024])
torch.Size([1024, 512, 3, 3])
torch.Size([1024])
torch.Size([1024, 512, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 512, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
torch.Size([1024, 1024, 3, 3])
torch.Size([1024])
target size :  torch.Size([3, 800, 1056])
x4 size :  torch.Size([1, 1024, 4, 5])
==================================================
The expanded size of the tensor (30) must match the existing size (60) at non-singleton dimension 1.  Target sizes: [2, 30].  Tensor sizes: [1, 60]
